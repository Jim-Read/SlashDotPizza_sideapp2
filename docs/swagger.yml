openapi: '3.0.2'
info:
  title: Slashdot Pizza
  version: '1.0'
servers:
  - url: ""
tags: 
- name: "Authorization"
  description: "Registering new users and logging in"
- name: "Users"
  description: "Users"
- name: "Pizza"
  description: "All the pizza"
  
paths:
  /auth/login:
    post:
      operationId: "auth_login"
      tags: 
      - "Authorization"
      summary: "Login to recieve a JWT token"
      parameters:
        - name: email
          in: path
          description: "The email address used to sign up"
          schema:
            type: string        
          required: true
        - name: password
          in: path
          description: "The password the user used to register"
          schema:
            type: string           
          required: true          
      responses:
        '200':
          description: OK
        '400': 
          description: Incorrect username or password
        
  /auth/register:
    post:
      operationId: "auth_register"
      tags: 
      - "Authorization"
      summary: "Register a new user"
      parameters:
        - name: email
          in: path
          description: "The email address used to sign up"
          schema:
            type: string        
          required: true
        - name: password
          in: path
          description: "The password the user used to register"
          schema:
            type: string           
          required: true          
      responses:
        '200':
          description: OK
        '400':
          description: Email already registered

  /auth/reset:
    post:
      operationId: "password_reset"
      tags: 
      - "Authorization"
      summary: "Reset users password"
      parameters:
        - name: email
          in: path
          description: "The email address used to sign up"
          schema:
            type: string        
          required: true
      responses:
        '200':
          description: OK
        '400':
          description: Email already registered



  /users/:
    get:
      operationId: "user_index"
      tags: 
      - "Users"
      summary: "Index page for all the users"
      responses:
        '200':
          description: OK


  /users/{user_id}:
    get:
      operationId: "user_show"
      tags: 
      - "Users"
      parameters:
        - name: user_id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      summary: "Find user profile by ID"
      responses:
        '200':
          description: OK
          
          
  /users/{user_id}/:
    patch:
      operationId: "user_update"
      tags: 
      - "Users"
      parameters:
        - name: user_id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
      summary: "Update user profile by ID - update username. password, picture,location"
      responses:
        '200':
          description: OK
        '400':
          description: Unauthorized to perform action
          
    delete:
      operationId: "profile_delete"
      tags: 
      - "Users"
      parameters:
        - name: user_id
          in: path
          description: ID of profile to return
          required: true
          schema:
            type: integer
      summary: "Delete user profile by ID"
      responses:
        '200':
          description: OK
        '400':
          description: Unauthorized to perform action
          
  /users/{user_id}/fav_friends:
    get:
      operationId: "user_friends"
      tags: 
      - "Users"
      parameters:
        - name: user_id
          in: path
          description: ID of profile to return
          required: true
          schema:
            type: integer
      summary: "Show users friends"
      responses:
        '200':
          description: OK
        '400':
          description: Unauthorized to perform action
          
  /users/{user_id}/fav_pizza:
    get:
      operationId: "user_pizza"
      tags: 
      - "Users"
      parameters:
        - name: user_id
          in: path
          description: ID of pizza to return
          required: true
          schema:
            type: integer
      summary: "Show users favourited pizza"
      responses:
        '200':
          description: OK
        '400':
          description: Unauthorized to perform action
          
          
  /pizzas/:
    get:
      operationId: "pizza_index"
      tags: 
      - "Pizza"
      summary: "Index page for all the pizzas"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}:
    get:
      operationId: "pizza_show"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: ID of pizza to return
          required: true
          schema:
            type: integer
      summary: "Find pizza by ID"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/comments/{comment_id}:
    get:
      operationId: "pizza_comments"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: comment_id of pizza_id to return
          required: true
          schema:
            type: integer
      summary: "Find users comments on pizza"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/comments/{comment_id}/likes/{likes_id}:
    get:
      operationId: "pizza_likes"
      tags: 
      - "Pizza"
      parameters:
        - name: comment_id
          in: path
          description: like_id of comment_id to return
          required: true
          schema:
            type: integer
      summary: "Find user likes on comments"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/ratings:
    get:
      operationId: "pizza_ratings"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: rating is given for each pizza
          required: true
          schema:
            type: integer
      summary: "Collects pizza ratings by user"
      responses:
        '200':
          description: OK
          
          
  /pizzas/{pizza_id}/comments/{comment_id}/:
    patch:
      operationId: "pizza_comments_update"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: comment_id of pizza_id to return
          required: true
          schema:
            type: integer
      summary: "update user comments on pizza"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/comments/{comment_id}/likes/{likes_id}/:
    patch:
      operationId: "likes_id_patch"
      tags: 
      - "Pizza"
      parameters:
        - name: comment_id
          in: path
          description: like_id of comment_id to return
          required: true
          schema:
            type: integer
      summary: "update user likes on comments"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/ratings/{ratings_id}/:
    patch:
      operationId: "ratings_id_patch"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: rating is given for each pizza
          required: true
          schema:
            type: integer
      summary: "updates pizza ratings by user"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/comments/{comment_id}//:
    delete:
      operationId: "pizza_comments_delete"
      tags: 
      - "Pizza"
      parameters:
        - name: comment_id
          in: path
          description: comment_id of pizza_id to return
          required: true
          schema:
            type: integer
      summary: "Delete users comment on pizza"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/comments/{comment_id}/likes/{like_id}/:
    delete:
      operationId: "like_id"
      tags: 
      - "Pizza"
      parameters:
        - name: comment_id
          in: path
          description: like_id of comment_id to return
          required: true
          schema:
            type: integer
      summary: "Delete user likes on comment"
      responses:
        '200':
          description: OK
          
  /pizzas/{pizza_id}/ratings/{rating_id}/:
    delete:
      operationId: "pizza_ratings_delete"
      tags: 
      - "Pizza"
      parameters:
        - name: pizza_id
          in: path
          description: rating is given for each pizza
          required: true
          schema:
            type: integer
      summary: "Deletes user pizza ratings"
      responses:
        '200':
          description: OK
          
          
         